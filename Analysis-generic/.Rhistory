AllData <- read.csv("./data/QualtricsSurvey_generic-v2_Test-num20180511", stringsAsFactors=FALSE)
#!/usr/bin/env Rscript
#####################################LIBRARIES#####################################
library(ggplot2)
library(scales)
library(reshape)
library(gridExtra)
library(grid)
library(dplyr)
#####################################FUNCTIONS#####################################
#wrap labels
#takes as attributes the string value to be wrapped, including categories in a plot, and the width
label_wrap_mod <- function(value, width = 30) {
sapply(strwrap(as.character(value), width=width, simplify=FALSE), paste, collapse="\n")}
# functions to generate summary of results for multiple choice questions
# takes as attributes the dataframe and column name (question ID)
multiSelection <- function(dataset, question)
{
prefix <- question
dataset <- dataset[, grep("_TEXT", colnames(dataset), value = TRUE, invert=TRUE)]
prefix_stack <- melt(dataset, id.vars=c("ResponseId", "count"), measure.vars = grep(toString(prefix), names(dataset), value = TRUE))
prefix_stack[prefix_stack == ""] <- NA # exclude cases without answer
prefix_stack <- prefix_stack[complete.cases(prefix_stack),]
prefix_stack
}
# Arrange graphs together with a single shared legend
grid_arrange_shared_legend <- function(..., ncol = length(list(...)), nrow = 1, position = c("bottom", "right")) {
plots <- list(...)
position <- match.arg(position)
g <- ggplotGrob(plots[[1]] + theme(legend.position = position))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
lwidth <- sum(legend$width)
gl <- lapply(plots, function(x) x + theme(legend.position="none"))
gl <- c(gl, ncol = ncol, nrow = nrow)
combined <- switch(position,
"bottom" = arrangeGrob(do.call(arrangeGrob, gl),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight)),
"right" = arrangeGrob(do.call(arrangeGrob, gl),
legend,
ncol = 2,
widths = unit.c(unit(1, "npc") - lwidth, lwidth)))
grid.newpage()
grid.draw(combined)
# return gtable invisibly
invisible(combined)
}
# plot a multiple choice question as bar chart
# input is the data fram and column name
plotMCQ <- function(data, question){
data$QID <- toString(question)
data <- left_join(x=data, y=questions, by=c("Group.1" = "QualtricsID"))
names(data)[names(data) =="x"] <- "count"
plot <- ggplot(data, aes(x=label_wrap_mod(subQtext, width=35), y=count))+ coord_flip() +
geom_bar(stat="Identity", width=0.8) +
theme(axis.title.y = element_blank(),axis.line=element_line(color="gray90"), text = element_text(size=12), panel.background=element_rect(fill="white"),plot.title = element_text(hjust=0.5)) +
#scale_y_continuous(breaks=pretty_breaks(n=10)) +
geom_text(aes(label=count),position=position_stack(vjust=0.5), colour="white") +
xlab("count")
plot
}
# plot a simple question as column chart
# input is the data fram and column name
plotSimpleQ <- function(data, question){
data$QID <- toString(question)
data <- left_join(x=data, y=options, by=c("QID", "Group.1" = "option"))
plot <- ggplot(data, aes(x=label_wrap_mod(data$optionText, width=35), fill=data$optionText)) +
geom_bar(stat="count", width=0.8) +
theme(legend.position="none", axis.title.x = element_blank(), axis.line=element_line(color="gray90"), text = element_text(size=12), panel.background=element_rect(fill="white"),plot.title = element_text(hjust=0.5)) +
scale_y_continuous(breaks=pretty_breaks(n=10)) +
geom_text(stat="count", aes(label=..count..),vjust=0, hjust=1.5, color="gray40")+
geom_text(aes(label = scales::percent((..count..)/sum(..count..)), y= (..count..)/2), stat= "count", vjust =0, color="white")
plot
}
# plot a matrix question as stacked 100% bar chart
# input is data frame and column name (question ID)
plotMatrixQ <- function(data, question){
data <- left_join(x=data, y=questions, by=c("Group.1"= "QualtricsID"))
data <- left_join(x=data, y=options, by=c("QID","Group.2" ="option"))
data$QID <- toString(question)
plot <- ggplot(data, aes(label_wrap_mod(optionText, width=35),x,fill=optionText))+ coord_flip()+
geom_bar(stat="Identity", position="stack",width=0.9, color="white") +
theme(axis.line=element_line(color="gray90"),axis.title.x=element_blank(),axis.ticks.x = element_blank(),axis.title.y = element_blank(), legend.position="top", legend.title = element_blank(),panel.background=element_rect(fill="white"),text = element_text(size=12)) +
geom_text(aes(label=x),size=3, position=position_stack(vjust=0.5), color="white")+
ylab("Count")
plot
}
AllData <- read.csv("./data/QualtricsSurvey_generic-v2_Test-num20180511", stringsAsFactors=FALSE)
AllData <- read.csv("./data/QualtricsSurvey_generic-v2_Test-num20180511.csv", stringsAsFactors=FALSE)
AllData <- read.csv("../data/QualtricsSurvey_generic-v2_Test-num20180511.csv", stringsAsFactors=FALSE)
#extract the data with just Q-code headers
data <- AllData[-c(1:2),c(7:118)]
#extract the data with just Q-code headers
data <- AllData[-c(1:2),c(7:115)]
data$count <- 1
head(data)
View(data)
# get a list of all questions and options of the survey
QualtricsID <- names(AllData[7:115])
Qualtricstext <- t(AllData[1,7:115])
QID <- NA
Qtext <- NA
subQID <- NA
subQtext <- NA
questions <- data.frame(QualtricsID, Qualtricstext, QID, Qtext, subQID, subQtext, row.names=NULL)
names(questions)[names(questions)=="X1"] <- "Qualtricstext"
questions$QID <- gsub("*_.*", "",questions$QualtricsID)
questions$Qtext <- gsub(" -.*","",questions$Qualtricstext)
questions$subQID <- gsub(".*_", "",questions$QualtricsID)
questions$subQtext <- gsub(".* - ","",questions$Qualtricstext)
#save the list to a csv file
write.table(questions,"surveyQuestions.csv", sep=",",row.names=FALSE)
options <- read.csv("Options.csv")
options$subQID <- as.character(options$subQID)
options$option <- as.character(options$option)
View(options)
View(questions)
AllData <- read.csv("../data/QualtricsSurvey_generic-v2_Test-num20180511.csv", stringsAsFactors=FALSE)
#extract the data with just Q-code headers
data <- AllData[-c(1:2),c(7:115)]
data$count <- 1
# get a list of all questions and options of the survey
QualtricsID <- names(AllData[7:115])
Qualtricstext <- t(AllData[1,7:115])
QID <- NA
Qtext <- NA
subQID <- NA
subQtext <- NA
questions <- data.frame(QualtricsID, Qualtricstext, QID, Qtext, subQID, subQtext, row.names=NULL)
names(questions)[names(questions)=="X1"] <- "Qualtricstext"
questions$QID <- gsub("*_.*", "",questions$QualtricsID)
questions$Qtext <- gsub(" -.*","",questions$Qualtricstext)
questions$subQID <- gsub(".*_", "",questions$QualtricsID)
questions$subQtext <- gsub(".* - ","",questions$Qualtricstext)
#save the list to a csv file
write.table(questions,"surveyQuestions.csv", sep=",",row.names=FALSE)
printText <- function(colname)
{
colNum <- match(toString(colname), names(data))
text <- data[,colNum]
text <- subset(text, text !="" & text !="n/a" & text !="N/A" & text !="none")
text
}
printText("Q4.1_31")
printText(Q4.1_31)
View(data)
printText("Q4.1_31_TEXT")
printText("Q3.2_5_TEXT")
printText("Q2.5")
printText("Q2.7")
printText("Q2.8")
printText("Q2.9_11_TEXT")
printText("Q2.15")
printText("Q2.16")
printText("Q3.2_5_TEXT")
printText("Q5.3")
printText("Q6.3")
printText("Q6.4")
deptResponse <- subset(data, Q6.1 !="")
deptResponse$Q6.2 <- gsub("1|2|3|4|7", "Staff", deptResponse$Q6.2)
deptResponse$Q6.2 <- gsub("5|6", "Staff", deptResponse$Q6.2)
#aggregate responses by department:
agg_deptResponse <- aggregate(deptResponse$count, by=list(deptResponse$Q6.1,deptResponse$Q6.2), FUN=sum, na.rm=TRUE)
agg_deptResponse$QID <- "Q6.1"
#label staff and students
agg_deptResponse <- left_join(x=agg_deptResponse, y=options, by=c("Group.1" = "option", "QID"))
deptResponse_plot <- ggplot(agg_deptResponse, aes(x=reorder(optionText, x, sum), y=x, fill=label_wrap_mod(Group.2, width=25))) +
coord_flip()+ geom_bar(stat="Identity", width=0.8) +
scale_fill_manual(values = c("gray65","gray30"))+
theme(legend.position="bottom", axis.title.y = element_blank(),axis.title.x = element_blank(),
legend.title = element_blank(), text = element_text(size=14),panel.background=element_rect(fill="white")) +
geom_text(aes(label= x),position=position_stack(vjust=0.5),size=3, color="white") +
scale_y_continuous(breaks=pretty_breaks(n=10))+
ylab("Count")
deptResponse_plot
deptORCIDs <- subset(data, Q6.1 !="")
agg_deptORCIDs <- aggregate(deptORCIDs$count, by=list(deptORCIDs$Q6.1, deptORCIDs$Q2.1), FUN=sum, na.rm=TRUE)
agg_deptORCIDs$QID1 <- "Q6.1"
agg_deptORCIDs$QID2 <- "Q2.1"
agg_deptORCIDs <- left_join(x=agg_deptORCIDs, y=options, by=c("Group.1" = "option", "QID1" = "QID"))
agg_deptORCIDs <- left_join(x=agg_deptORCIDs, y=options, by=c("Group.2" = "option", "QID2" = "QID"))
deptORCIDs_plot <- ggplot(agg_deptORCIDs, aes(y=x, x=optionText.x, fill=optionText.y)) + coord_flip() +
geom_bar(stat="Identity", width=0.8) +
theme(legend.position="bottom", axis.title.y = element_blank(),axis.title.x = element_blank(),
legend.title = element_blank(), text = element_text(size=14),panel.background=element_rect(fill="white")) +
geom_text(aes(label= x),position=position_stack(vjust=0.5),size=3, color="white")
deptORCIDs
names(agg_deptResponse)[names(agg_deptResponse) =="Group.1 | optionText"] <- "School"
names(agg_deptResponse)[names(agg_deptResponse) =="x"] <- "count"
write.table(agg_deptResponse,"./results/responses-roles.csv", sep=",")
ggsave("./results/deptResponse_plot.png", plot = deptResponse_plot, dpi=300)
names(agg_deptResponse)[names(agg_deptResponse) =="Group.1 | optionText"] <- "School"
names(agg_deptResponse)[names(agg_deptResponse) =="x"] <- "count"
write.table(agg_deptResponse,"../results/responses-roles.csv", sep=",")
ggsave("../results/deptResponse_plot.png", plot = deptResponse_plot, dpi=300)
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="Group.1 | optionText.x"] <- "School"
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="Group.2 | optionText.y"] <- "ORCID iD"
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="x"] <- "count"
write.table(agg_deptORCIDs,"../results/ORCID-dept.csv", sep=",")
ggsave("../results/deptORCIDs.png", plot=deptORCIDs_plot, dpi=300)
View(agg_deptORCIDs)
View(agg_deptResponse)
deptResponse <- subset(data, Q6.1 !="")
deptResponse$Q6.2 <- gsub("1|2|3|4|7", "Staff", deptResponse$Q6.2)
deptResponse$Q6.2 <- gsub("5|6", "Staff", deptResponse$Q6.2)
#aggregate responses by department:
agg_deptResponse <- aggregate(deptResponse$count, by=list(deptResponse$Q6.1,deptResponse$Q6.2), FUN=sum, na.rm=TRUE)
agg_deptResponse$QID <- "Q6.1"
#label staff and students
agg_deptResponse <- left_join(x=agg_deptResponse, y=options, by=c("Group.1" = "option", "QID"))
deptResponse_plot <- ggplot(agg_deptResponse, aes(x=reorder(optionText, x, sum), y=x, fill=label_wrap_mod(Group.2, width=25))) +
coord_flip()+ geom_bar(stat="Identity", width=0.8) +
scale_fill_manual(values = c("gray65","gray30"))+
theme(legend.position="bottom", axis.title.y = element_blank(),axis.title.x = element_blank(),
legend.title = element_blank(), text = element_text(size=14),panel.background=element_rect(fill="white")) +
geom_text(aes(label= x),position=position_stack(vjust=0.5),size=3, color="white") +
scale_y_continuous(breaks=pretty_breaks(n=10))+
ylab("Count")
#plot ORCID iDs
deptORCIDs <- subset(data, Q6.1 !="")
agg_deptORCIDs <- aggregate(deptORCIDs$count, by=list(deptORCIDs$Q6.1, deptORCIDs$Q2.1), FUN=sum, na.rm=TRUE)
agg_deptORCIDs$QID1 <- "Q6.1"
agg_deptORCIDs$QID2 <- "Q2.1"
agg_deptORCIDs <- left_join(x=agg_deptORCIDs, y=options, by=c("Group.1" = "option", "QID1" = "QID"))
agg_deptORCIDs <- left_join(x=agg_deptORCIDs, y=options, by=c("Group.2" = "option", "QID2" = "QID"))
deptORCIDs_plot <- ggplot(agg_deptORCIDs, aes(y=x, x=optionText.x, fill=optionText.y)) + coord_flip() +
geom_bar(stat="Identity", width=0.8) +
theme(legend.position="bottom", axis.title.y = element_blank(),axis.title.x = element_blank(),
legend.title = element_blank(), text = element_text(size=14),panel.background=element_rect(fill="white")) +
geom_text(aes(label= x),position=position_stack(vjust=0.5),size=3, color="white")
#export output
names(agg_deptResponse)[names(agg_deptResponse) =="Group.1 | optionText"] <- "School"
names(agg_deptResponse)[names(agg_deptResponse) =="x"] <- "count"
write.table(agg_deptResponse,"../results/responses-roles.csv", sep=",")
ggsave("../results/deptResponse_plot.png", plot = deptResponse_plot, dpi=300)
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="Group.1 | optionText.x"] <- "School"
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="Group.2 | optionText.y"] <- "ORCID iD"
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="x"] <- "count"
write.table(agg_deptORCIDs,"../results/ORCID-dept.csv", sep=",")
ggsave("../results/deptORCIDs.png", plot=deptORCIDs_plot, dpi=300)
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="Group.1"] <- "School"
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="optionText.x"] <- "School"
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="Group.2"] <- "ORCID iD"
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="optionText.y"] <- "ORCID iD"
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="x"] <- "count"
write.table(agg_deptORCIDs,"../results/ORCID-dept.csv", sep=",", row.names = FALSE)
names(agg_roleORCIDs)[names(agg_roleORCIDs) =="Group.1|optionText.x"] <- "Role"
roleResponse <- subset(data, Q6.2 !="")
#[plot response rate by role
agg_roleResponse <- aggregate(roleResponse$count, by=list(roleResponse$Q6.2), FUN=sum, na.rm=TRUE)
roleResponse_plot <- plotSimpleQ(agg_roleResponse, "Q6.2") + theme(axis.title.y=element_blank()) + coord_flip()
# plot ORCID iDs
roleORCIDs <- subset(data, Q6.2 !="")
agg_roleORCIDs <- aggregate(roleORCIDs$count, by=list(roleORCIDs$Q6.2, roleORCIDs$Q2.1), FUN=sum, na.rm=TRUE)
agg_roleORCIDs$QID1 <- "Q6.2"
agg_roleORCIDs$QID2 <- "Q2.1"
agg_roleORCIDs <- left_join(x=agg_roleORCIDs, y=options, by=c("Group.1" = "option", "QID1"="QID"))
agg_roleORCIDs <- left_join(x=agg_roleORCIDs, y=options, by=c("Group.2" = "option", "QID2"="QID"))
roleORCIDs_plot <- ggplot(agg_roleORCIDs, aes(y=x, x=label_wrap_mod(optionText.x, width=30), fill=optionText.y)) + coord_flip() +
geom_bar(stat="Identity", width=0.8) +
theme(legend.position="bottom", axis.title.y = element_blank(),axis.title.x = element_blank(),
legend.title = element_blank(), text = element_text(size=14),panel.background=element_rect(fill="white")) +
geom_text(aes(label= x),position=position_stack(vjust=0.5),size=3, color="white")
#export output
agg_roleResponse$QID <- "Q6.2"
agg_roleResponse <- left_join(x=agg_roleResponse, y=options, by=c("QID", "Group.1" = "option"))
names(agg_roleResponse)[names(agg_roleResponse) =="x"] <- "count"
write.table(agg_roleResponse,"../results/responses-roles.csv", sep=",", row.names = FALSE)
ggsave("../results/roleResponse.png", plot=roleResponse_plot, dpi=300)
names(agg_roleORCIDs)[names(agg_roleORCIDs) =="Group.1|optionText.x"] <- "Role"
View(agg_roleORCIDs)
names(agg_roleORCIDs)[names(agg_roleORCIDs) =="Group.1" |names(agg_roleORCIDs) =="ptionText.x"] <- "Role"
View(agg_roleORCIDs)
names(agg_roleORCIDs)[names(agg_roleORCIDs) =="Group.1" |names(agg_roleORCIDs) =="OptionText.x"] <- "Role"
iDs <- subset(data, Q2.1!="")
iDs <- aggregate(iDs$count, by=list(iDs$Q2.1), FUN=sum, na.rm=T)
ORCIDiDs_plot <- plotSimpleQ(iDs, "Q2.1")
ggsave("../results/ORCIDiDs.png", plot=ORCIDiDs_plot, dpi=300)
ORCIDiDs_plot
names(agg_roleORCIDs)[names(agg_roleORCIDs) =="Group.1" |names(agg_roleORCIDs) =="optionText.x"] <- "Role"
names(agg_roleORCIDs)[names(agg_roleORCIDs) =="Group.2" |names(agg_roleORCIDs) =="optionText.y"] <- "ORCID iD"
names(agg_roleORCIDs)[names(agg_roleORCIDs) =="x"] <- "count"
write.table(agg_roleORCIDs,"../results/ORCID-role.csv", sep=",", row.names = FALSE)
ggsave("../results/roleORCIDs.png", plot=roleORCIDs_plot, dpi=300)
agg_roleResponse$QID <- "Q6.2"
agg_roleResponse <- left_join(x=agg_roleResponse, y=options, by=c("QID", "Group.1" = "option"))
names(agg_roleResponse)[names(agg_roleResponse) =="x"] <- "count"
write.table(agg_roleResponse,"../results/responses-roles.csv", sep=",", row.names = FALSE)
ownership <- subset(data, Q2.2 != "")
ownership <- aggregate(ownership$count, by=list(ownership$Q2.2), FUN=sum, na.rm=TRUE)
ownership_plot <- plotSimpleQ(ownership,"Q2.2")
ownership_plot
View(ownership)
ownership$QID <- "Q2.2"
ownership_exp <- left_join(x=ownership, y=options, by=c("QID", "Group.1"="option"))
names(ownership_exp)[names(ownership_exp) =="x"] <- "count"
View(ownership_exp)
View(ownership_exp)
subset(ownership_exp, c("optionText", "count"))
subset(ownership_exp, c=("optionText", "count"))
subset(ownership_exp, select=c("optionText", "count"))
write.table(subset(ownership_exp, select=c("optionText", "count")),"../results/ORCID-ownershipTime.csv", sep=",")
View(agg_deptORCIDs)
write.table(susbet(agg_roleORCIDs, select=c("School", "ORCIDiD", "count")),"../results/ORCID-role.csv", sep=",", row.names = FALSE)
write.table(subset(agg_roleORCIDs, select=c("School", "ORCIDiD", "count")),"../results/ORCID-role.csv", sep=",", row.names = FALSE)
View(agg_deptORCIDs)
write.table(subset(agg_roleORCIDs, select=c("School", "ORCID iD", "count")),"../results/ORCID-role.csv", sep=",", row.names = FALSE)
View(agg_deptResponse)
View(agg_deptORCIDs)
View(agg_roleORCIDs)
write.table(subset(agg_roleORCIDs, select=c("Role", "ORCID iD", "count")),"../results/ORCID-role.csv", sep=",", row.names = FALSE)
View(agg_roleResponse)
agg_roleResponse <- left_join(x=agg_roleResponse, y=options, by=c("QID", "Group.1" = "option", "optionText"))
#export output
agg_roleResponse$QID <- "Q6.2"
agg_roleResponse <- left_join(x=agg_roleResponse, y=options, by=c("QID", "Group.1" = "option", "optionText"))
roleORCIDs <- subset(data, Q6.2 !="")
agg_roleORCIDs <- aggregate(roleORCIDs$count, by=list(roleORCIDs$Q6.2, roleORCIDs$Q2.1), FUN=sum, na.rm=TRUE)
agg_roleORCIDs$QID1 <- "Q6.2"
agg_roleORCIDs$QID2 <- "Q2.1"
agg_roleORCIDs <- left_join(x=agg_roleORCIDs, y=options, by=c("Group.1" = "option", "QID1"="QID"))
agg_roleORCIDs <- left_join(x=agg_roleORCIDs, y=options, by=c("Group.2" = "option", "QID2"="QID"))
#export output
agg_roleResponse$QID <- "Q6.2"
agg_roleResponse <- left_join(x=agg_roleResponse, y=options, by=c("QID", "Group.1" = "option", "optionText"))
#################### By role ################################
roleResponse <- subset(data, Q6.2 !="")
#[plot response rate by role
agg_roleResponse <- aggregate(roleResponse$count, by=list(roleResponse$Q6.2), FUN=sum, na.rm=TRUE)
roleResponse_plot <- plotSimpleQ(agg_roleResponse, "Q6.2") + theme(axis.title.y=element_blank()) + coord_flip()
#export output
agg_roleResponse$QID <- "Q6.2"
agg_roleResponse <- left_join(x=agg_roleResponse, y=options, by=c("QID", "Group.1" = "option", "optionText"))
agg_roleResponse <- left_join(x=agg_roleResponse, y=options, by=c("QID", "Group.1" = "option"))
names(agg_roleResponse)[names(agg_roleResponse) =="=optionText"] <- "Role"
write.table(subset(agg_roleResponse, select=c("Role", "count")),"../results/responses-roles.csv", sep=",", row.names = FALSE)
names(agg_roleResponse)[names(agg_roleResponse) =="optionText"] <- "Role"
write.table(subset(agg_roleResponse, select=c("Role", "count")),"../results/responses-roles.csv", sep=",", row.names = FALSE)
names(agg_roleResponse)[names(agg_roleResponse) =="x"] <- "count"
write.table(subset(agg_roleResponse, select=c("Role", "count")),"../results/responses-roles.csv", sep=",", row.names = FALSE)
deptORCIDs <- subset(data, Q6.1 !="")
agg_deptORCIDs <- aggregate(deptORCIDs$count, by=list(deptORCIDs$Q6.1, deptORCIDs$Q2.1), FUN=sum, na.rm=TRUE)
agg_deptORCIDs$QID1 <- "Q6.1"
agg_deptORCIDs$QID2 <- "Q2.1"
agg_deptORCIDs <- left_join(x=agg_deptORCIDs, y=options, by=c("Group.1" = "option", "QID1" = "QID"))
agg_deptORCIDs <- left_join(x=agg_deptORCIDs, y=options, by=c("Group.2" = "option", "QID2" = "QID"))
names(agg_deptResponse)[names(agg_deptResponse) =="Group.1 | optionText"] <- "School"
names(agg_deptResponse)[names(agg_deptResponse) =="x"] <- "count"
write.table(agg_deptResponse,"../results/responses-roles.csv", sep=",", row.names = FALSE)
write.table(agg_deptResponse,"../results/responses-depts.csv", sep=",", row.names = FALSE)
deptORCIDs <- subset(data, Q6.1 !="")
agg_deptORCIDs <- aggregate(deptORCIDs$count, by=list(deptORCIDs$Q6.1, deptORCIDs$Q2.1), FUN=sum, na.rm=TRUE)
agg_deptORCIDs$QID1 <- "Q6.1"
agg_deptORCIDs$QID2 <- "Q2.1"
agg_deptORCIDs <- left_join(x=agg_deptORCIDs, y=options, by=c("Group.1" = "option", "QID1" = "QID"))
agg_deptORCIDs <- left_join(x=agg_deptORCIDs, y=options, by=c("Group.2" = "option", "QID2" = "QID"))
names(agg_deptResponse)[names(agg_deptResponse) =="optionText"] <- "School"
names(agg_deptResponse)[names(agg_deptResponse) =="x"] <- "count"
write.table(subset(agg_deptResponse, select=c("School", "ORCID iD", "count")),"../results/responses-depts.csv", sep=",", row.names = FALSE)
View(agg_deptResponse)
write.table(subset(agg_deptResponse, select=c("School", "count")),"../results/responses-depts.csv", sep=",", row.names = FALSE)
write.table(subset(agg_deptORCIDs, select=c("School", "ORCID iD", "count")),"../results/ORCID-dept.csv", sep=",", row.names = FALSE)
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="optionText.x"] <- "School"
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="optionText.y"] <- "ORCID iD"
names(agg_deptORCIDs)[names(agg_deptORCIDs) =="x"] <- "count"
write.table(subset(agg_deptORCIDs, select=c("School", "ORCID iD", "count")),"../results/ORCID-dept.csv", sep=",", row.names = FALSE)
heardFirst <- multiSelection(hasORCID, "Q2.3")
heardFirst<- aggregate(heardFirst$count, by=list(heardFirst$variable, heardFirst$value), FUN=sum, na.rm=TRUE)
############## SURVEY QESTIONS FOR PARTICIPANTS WITH ORCID iDs
#AllData <- read.csv("Test_20180413.csv", stringsAsFactors=FALSE)
#data <- AllData[-c(1:2),c(8,12:119)]
#data$count <- 1
hasORCID <- subset(data, Q2.1==1)
heardFirst <- multiSelection(hasORCID, "Q2.3")
heardFirst<- aggregate(heardFirst$count, by=list(heardFirst$variable, heardFirst$value), FUN=sum, na.rm=TRUE)
View(AllData)
#extract the data with just Q-code headers
data <- AllData[-c(1:2),c(4, 7:115)]
data$count <- 1
heardFirst <- multiSelection(hasORCID, "Q2.3")
heardFirst<- aggregate(heardFirst$count, by=list(heardFirst$variable, heardFirst$value), FUN=sum, na.rm=TRUE)
############## SURVEY QESTIONS FOR PARTICIPANTS WITH ORCID iDs
#AllData <- read.csv("Test_20180413.csv", stringsAsFactors=FALSE)
#data <- AllData[-c(1:2),c(8,12:119)]
#data$count <- 1
hasORCID <- subset(data, Q2.1==1)
heardFirst <- multiSelection(hasORCID, "Q2.3")
heardFirst<- aggregate(heardFirst$count, by=list(heardFirst$variable, heardFirst$value), FUN=sum, na.rm=TRUE)
heardFirst$QID <- "Q2.3"
heardFirst_exp <- left_join(x=heardFirst, y=questions, by=c("Group.1"="QualtricsID"))
View(heardFirst)
heardFirst_exp <- left_join(x=heardFirst, y=questions, by=c("Group.1"="QualtricsID"))
View(heardFirst_exp)
#export output
heardFirst$QID <- "Q2.3"
####################having heard about ORCID################################
heardFirst <- multiSelection(hasORCID, "Q2.3")
heardFirst<- aggregate(heardFirst$count, by=list(heardFirst$variable, heardFirst$value), FUN=sum, na.rm=TRUE)
#export output
heardFirst$QID <- "Q2.3"
heardFirst_exp <- left_join(x=heardFirst, y=questions, by=c("Group.1"="QualtricsID"))
View(heardFirst_exp)
names(heardFirst_exp)[names(heardFirst_exp) =="x"] <- "count"
mandatedORCID <- subset(hasORCID, Q2.4 !="")
mandatedORCID <- aggregate(mandatedORCID$count, by=list(mandatedORCID$Q2.4), FUN=sum, na.rm=TRUE)
mandatedORCID$ID <- "Q2.4"
madatedORCID_exp <- left_join(x=ownership, y=options, by=c("QID", "Group.1"="option"))
View(madatedORCID_exp)
names(madatedORCID_exp)[names(madatedORCID_exp) =="x"] <- "count"
names(madatedORCID_exp)[names(madatedORCID_exp) =="x"] <- "count"
write.table(subset(madatedORCID_exp, select=c("optionText", "count")), "../results/mandatedORCID.csv", sep=",", row.names=FALSE)
ORCIDmotivation <- multiSelection(hasORCID, "Q2.5")
ORCIDmotivation<- aggregate(ORCIDmotivation$count, by=list(ORCIDmotivation$variable, ORCIDmotivation$value), FUN=sum, na.rm=TRUE)
View(questions)
ORCIDmotivation <- multiSelection(hasORCID, "Q2.6")
ORCIDmotivation<- aggregate(ORCIDmotivation$count, by=list(ORCIDmotivation$variable, ORCIDmotivation$value), FUN=sum, na.rm=TRUE)
ORCIDmotivation_plot <- plotMatrixQ(ORCIDmotivation, "Q2.6")
ORCIDmotivation_exp <- left_join(x=ORCIDmotivation, y=questions, by=c("Group.1" = "QualtricsID"))
ORCIDmotivation_exp$QID <- "Q2.6"
ORCIDmotivation_exp <- left_join(x=ORCIDmotivation_exp, y=options, by=c("QID"))
names(ORCIDmotivation_exp)[names(ORCIDmotivation_exp) =="x"] <- "count"
View(ORCIDmotivation_plot)
View(ORCIDmotivation_exp)
View(ORCIDmotivation_plot)
View(ORCIDmotivation_plot)
write.table(subset(ORCIDmotivation_exp, select=c("Qtext", "subQtext", "optionText" "count")),"../results/ORCIDmotivation.csv", sep=",")
names(ORCIDmotivation_exp)[names(ORCIDmotivation_exp) =="x"] <- "count"
write.table(subset(ORCIDmotivation_exp, select=c("Qtext", "subQtext", "optionText" "count")),"../results/ORCIDmotivation.csv", sep=",")
write.table(subset(ORCIDmotivation_exp, select=c("Qtext", "subQtext", "optionText", "count")),"../results/ORCIDmotivation.csv", sep=",")
clarification <- multiSelection(hasORCID, "Q2.9")
clarification <- aggregate(clarification$count, by=list(clarification$variable, clarification$value), FUN=sum, na.rm=TRUE)
clarification_plot <-plotMCQ(clarification, "Q2.9") + theme(axis.title.x = element_blank())
#export output
clarification$QID <- "Q2.9"
clarification_exp <- left_join(x=clarification, y=questions, by=c("Group.1"="QualtricsID"))
names(clarification_exp)[names(clarification_exp) =="x"] <- "count"
write.table(subset(clarification_exp, select=c("Qtext", "subQtext", "count")),"../results/clarifyingORCID.csv", sep=",",row.names=FALSE)
View(clarification_exp)
View(clarification_plot)
View(clarification_exp)
View(questions)
populate <- subset(hasORCID, Q2.10 !="")
populate <- aggregate(populate$count, by=list(populate$Q2.10), FUN=sum, na.rm=TRUE)
populate <- plotSimpleQ(populate,"Q2.10")
populate <- multiSelection(hasORCID, "Q2.10")
populate <- aggregate(populate$count, by=list(populate$variable, populate$value), FUN=sum, na.rm=TRUE)
populate_plot <-plotMCQ(populate, "Q2.10") + theme(axis.title.x = element_blank())
populate_plot
populate$QID <- "Q2.10"
populate_exp <- left_join(x=populate, y=questions, by=c("Group.1"="QualtricsID"))
names(populate_exp)[names(populate_exp) =="x"] <- "count"
write.table(subset(populate_exp, select=c("Qtext", "subQtext", "count")),"../results/clarifyingORCID.csv", sep=",",row.names=FALSE)
ggsave("../results/clarification.png", plot=populate_plot, dpi=300)
############## SURVEY QESTIONS FOR PARTICIPANTS WHO DO NOT HAVE AN ORCID iD
#AllData <- read.csv("Test_20180413.csv", stringsAsFactors=FALSE)
#data <- AllData[-c(1:2),c(8,12:119)]
#data$count <- 1
noORCID <- subset(data, Q2.1==2)
